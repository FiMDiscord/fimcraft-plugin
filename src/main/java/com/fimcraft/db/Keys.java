/*
 * This file is generated by jOOQ.
 */
package com.fimcraft.db;


import com.fimcraft.db.tables.Users;
import com.fimcraft.db.tables.Verification;
import com.fimcraft.db.tables.records.UsersRecord;
import com.fimcraft.db.tables.records.VerificationRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<UsersRecord> PK_USERS = UniqueKeys0.PK_USERS;
    public static final UniqueKey<UsersRecord> SQLITE_AUTOINDEX_USERS_2 = UniqueKeys0.SQLITE_AUTOINDEX_USERS_2;
    public static final UniqueKey<VerificationRecord> PK_VERIFICATION = UniqueKeys0.PK_VERIFICATION;
    public static final UniqueKey<VerificationRecord> SQLITE_AUTOINDEX_VERIFICATION_2 = UniqueKeys0.SQLITE_AUTOINDEX_VERIFICATION_2;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<UsersRecord> PK_USERS = Internal.createUniqueKey(Users.USERS, "pk_Users", new TableField[] { Users.USERS.UUID }, true);
        public static final UniqueKey<UsersRecord> SQLITE_AUTOINDEX_USERS_2 = Internal.createUniqueKey(Users.USERS, "sqlite_autoindex_Users_2", new TableField[] { Users.USERS.DISCORDID }, true);
        public static final UniqueKey<VerificationRecord> PK_VERIFICATION = Internal.createUniqueKey(Verification.VERIFICATION, "pk_verification", new TableField[] { Verification.VERIFICATION.UUID }, true);
        public static final UniqueKey<VerificationRecord> SQLITE_AUTOINDEX_VERIFICATION_2 = Internal.createUniqueKey(Verification.VERIFICATION, "sqlite_autoindex_verification_2", new TableField[] { Verification.VERIFICATION.KEY }, true);
    }
}
