/*
 * This file is generated by jOOQ.
 */
package com.fimcraft.db.tables.records;


import com.fimcraft.db.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record4<String, String, String, Boolean> {

    private static final long serialVersionUID = 1343283689;

    /**
     * Setter for <code>Users.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Users.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Users.discordID</code>.
     */
    public void setDiscordid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Users.discordID</code>.
     */
    public String getDiscordid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Users.username</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Users.username</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Users.verified</code>.
     */
    public void setVerified(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>Users.verified</code>.
     */
    public Boolean getVerified() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.UUID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.DISCORDID;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<Boolean> field4() {
        return Users.USERS.VERIFIED;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getDiscordid();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public Boolean component4() {
        return getVerified();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getDiscordid();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public Boolean value4() {
        return getVerified();
    }

    @Override
    public UsersRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setDiscordid(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value4(Boolean value) {
        setVerified(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, String value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String uuid, String discordid, String username, Boolean verified) {
        super(Users.USERS);

        set(0, uuid);
        set(1, discordid);
        set(2, username);
        set(3, verified);
    }
}
